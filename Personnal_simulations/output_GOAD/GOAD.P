attackerLocated(intranet).
attackGoal(stolenCredential(samwell_tarly, _)).
attackGoal(stolenCredential(brandon_stark, _)).
attackGoal(stolenCredential(hodor, _)).
/* attackGoal(execCode(meereen, _)). */
attackGoal(netAccess(winterfell)).
/* attackGoal(accessibleHash(localAdmin, castelblack, castelblack)).
attackGoal(userAdminOf(jeor_mormont, castelblack)).
attackGoal(stolenCredential(jeor_mormont, north_sevenkingdoms_local)). */
/* attackGoal(accessFile(_, _, _)).
attackGoal(execCode(_, _)). */

/* Users and their properties */
userDefined(eddard_stark, north_sevenkingdoms_local, domain_admin).
userPartOf(eddard_stark, runNTLMBot, user).

userDefined(jon_snow, north_sevenkingdoms_local, user).
accessibleHash(jon_snow, north_sevenkingdoms_local, kerberoasting). /* part 3 kerberoasting */
weakPassword(jon_snow). /* part 3 */

userDefined(catelyn_stark, north_sevenkingdoms_local, user).

userDefined(robb_stark, north_sevenkingdoms_local, user).
userPartOf(robb_stark, runNTLMBot, user).
weakPassword(robb_stark).

userDefined(jeor_mormont, north_sevenkingdoms_local, user).
userPartOf(jeor_mormont, castelblack, admin).
/* stolenCredential(jeor_mormont, north_sevenkingdoms_local). */ /* part 9, je ne sais pas d'où ça sort */

userDefined(hodor, north_sevenkingdoms_local, user).
inCompetent(hodor).

userDefined(samwell_tarly, north_sevenkingdoms_local, user).
inCompetent(samwell_tarly). /* part 2 password in description */

userDefined(brandon_stark, north_sevenkingdoms_local, user).
weakPassword(brandon_stark). /* part 2, asreproasting + brutforce */
accessibleHash(brandon_stark, north_sevenkingdoms_local, asreproasting ). /* part 2, asreproasting + brutforce */

userDefined(localAdmin, castelblack, local_admin).



/* Hosts and their properties */
hostDefined(castelblack, north_sevenkingdoms_local).
hostProperty(castelblack, signedSMB, false).
hostProperty(castelblack, automaticDNS, true). /* part4 */

vulExists(castelblack, 'IIS_webshell', asp_net). /* part8 */
vulProperty('IIS_webshell', remoteExploit, execCode). /* part8 */
cvss('IIS_webshell', h). /* part8 */
networkServiceInfo(castelblack, asp_net, shell). /* part8 */

hostDefined(winterfell, north_sevenkingdoms_local).
vulExists(winterfell, 'Enumerate DC properties anonymously', north_sevenkingdoms_local). /* part2 account enumeration */
vulProperty('Enumerate DC properties anonymously', remoteExploit, accountEnumeration). /* part2 */
cvss('Enumerate DC properties anonymously', m). /* part2 faux score car la vuln n'a pas de CVE associé */

vulExists(winterfell, 'CVE-2021-42287', Active_Directory). /* part5 samAccountName */
vulProperty('CVE-2021-42287', remoteExploit, fileAccess). /* part5 */
cvss('CVE-2021-42287', h). /* part5 */
fileOnHost(ntdsdit, winterfell). /* part5 */



/* Configuration of Meereen */
hostDefined(meereen, essos_local).

vulExists(meereen, 'CVE-2019-1040', removeTheMic).
vulProperty('CVE-2019-1040', remoteExploit, accessLocalHash). /* part4 permet de récupérer des hash de mot de pass, à déployer et utiliser plus tard */
/* La faille est sur meereen; mais elle est utilisée autre part */
cvss('CVE-2019-1040', m). /* part4 */
accessibleHash(localAdmin, meereen, meereen). /* part4 */
accessibleHash(guest, meereen, meereen). /* part4 */
accessibleHash(defaultAccount, meereen, meereen). /* part4 */

setuidProgramInfo(meereen, spooler, root). /* part5 */
networkServiceInfo(meereen, spooler, _root). /* part5 */
vulExists(meereen, 'CVE-2021-1675', spooler). /* part5 printNightMare */
vulProperty('CVE-2021-1675', remoteExploit, privEscalation). /* part5 */
cvss('CVE-2021-1675', h). /* part5 */ 

vulExists(meereen, 'ESC8', webEnrollementEnabled). /* part6 ADCS */
vulProperty('ESC8', remoteExploit, accessLocalHash). /* part6 en tout cas ça permet de lire des hash au niveau du DC */
cvss('ESC8', h). /* sans vraie idée de ce que ça vaut */
accessibleHash(localAdmin, meereen, meereen). /* part6 */
accessibleHash(guest, meereen, meereen). /* part6 */
accessibleHash(defaultAccount, meereen, meereen). /* part6 */
accessibleHash(daenerys_targaryen, meereen, meereen). /* part6 */
accessibleHash(jorah_mormont, meereen, meereen). /* part6 */
/* ... */

vulExists(meereen, 'ESC1', certification). /* part6 */
vulProperty('ESC1', remoteExploit, accessLocalHash). /* part6 */
cvss('ESC1', h). /* part6 */

vulExists(meereen, 'ESC2', certification). /* part6 */
vulProperty('ESC2', remoteExploit, accessLocalHash). /* part6 */
cvss('ESC2', h). /* part6 */

vulExists(meereen, 'ESC3', certification). /* part6 */
vulProperty('ESC3', remoteExploit, accessLocalHash). /* part6 */
cvss('ESC3', h). /* part6 */

vulExists(meereen, 'CVE-2022-26923', certifried). /* part6 */
vulProperty('CVE-2022-26923', remoteExploit, privEscalation). /* part6 */
cvss('CVE-2022-26923', h). /* part6 */
networkServiceInfo(meereen, certifried, shell). /* part6 */

vulExists(meereen, 'ShadowCredential', essos_local). /* part6 */
vulProperty('ShadowCredential', remoteExploit, accessLocalHash). /* part6 */
cvss('ShadowCredential', h). /* part6 */


/**** MSSQL ****/
/* Coerce and relay à mettre aussi en place depuis la partie 7 */
/* Pour que la vuln suivante soit bien représentée, il faut ajouter la nécéssité d avoir un compte */
vulExists(braavos, 'MSSQL', mssql). /* part7 */
vulProperty('MSSQL', remoteExploit, privEscalation). /* part7 */
cvss('MSSQL', h). /* part7 */
networkServiceInfo(braavos, mssql, shell). /* part7 */

vulExists(castelblack, 'MSSQL', mssql). /* part7 */
networkServiceInfo(castelblack, mssql, shell). /* part7 */


/* exterior host */
hostDefined(external, out). /* part4, à voir parce qu'en vrai il prend l'identité d'un autre */
userAdminOf(attacker, external).

/* Network Configurations */
networkServiceInfo(castelblack, vpnService, _).
rdpEnabled(castelblack).
isRuning(ntlmBot, winterfell). /* part4 */

/* Credentials */
credentialInClear(sql_svc, castelblack, mssql). /* part4 */
credentialInClear(robb_stark, castelblack, north_sevenkingdoms_local). /* part4 */


hacl(intranet, _, _, _).
