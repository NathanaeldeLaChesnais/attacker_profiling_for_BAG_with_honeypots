primitive(attackerLocated(_domain)).
primitive(vulExists(_domain, _cve, _mod)).
primitive(hostDom(_host, _domain)).
meta(user(_user)).

derived(mitm(_domain)).
derived(admin(_domain)).
derived(dcSync(_domain)).
derived(vulnerableHost(_domain)).
derived(classicQCM(_domain)).
derived(validCredential(_domain)).
derived(lowAccess(_host)).
derived(passTheTicket(_domain)).
derived(coerceHTTP(_domain)).
derived(coerceSMB(_domain)).
derived(userName(_user)).
derived(hash(_user)).
derived(hashNTLM(_user)).
derived(validUser(_)).
derived(socksNTLM(_host)).
derived(hashKRB(_user)).


meta(attackGoal(_)).
meta(cvss(_vulID, _ac)).

/* Logical rules */
interaction_rule(
    (hash(User) :-
        hashNTLM(User)),
    rule_desc('hashntlm gives hash', 'likely')).

interaction_rule(
    (hash(User) :-
        hashKRB(User)),
    rule_desc('hashkrb gives hash', 'likely')).

interaction_rule(
    (validUser(_) :-
        validCredential(User),
        user(User)),
    rule_desc('rassemblement des comptes user en 1', 'certain')).

interaction_rule(
    (hashNTLM(admin) :-
        hashNTLM(domadmin)),
    rule_desc('domadmin is admin', 'certain')).

/* No credential */
interaction_rule(
    (coerceSMB(Domain) :-
        attackerLocated(Domain),
        vulExists(Domain, CVE, smb),
        cvss(CVE, AC)),
    rule_desc('coerceSMB is possible', 'likely')).

interaction_rule(
    (userName(User) :-
        attackerLocated(Domain)),
    rule_desc('osint account', 'likely')).

interaction_rule(
    (hashNTLM(User) :-
        attackerLocated(Domain),
        vulExists(User, CVE, ntlm_bot)),
    rule_desc('responder gives netntlmv2 hashes from bots', 'likely')).

/* MITM */
interaction_rule(
    (localAdmin(Domain) :-
        mitm(Domain),
        vulExists(Domain, CVE, ms_08_068),
        cvss(CVE, AC)),
    rule_desc('local admin access is possible', 'likely')).

interaction_rule(
    (dcSync(Domain) :-
        coerceSMB(Domain),
        vulExists(Domain, CVE, coerceSMB_to_dcSync),
        cvss(CVE, AC)),
    rule_desc('dc sync attack is possible from smb into ldap', 'likely')).

interaction_rule(
    (socksNTLM(Host) :-
        vulExists(Host, CVE, unsigned_smb)),
    rule_desc('SMB is not signed', 'likely')).

/* Classic Quick Compromission Methods */
interaction_rule(
    (vulnerableHost(_) :-
        attackerLocated(Domain)),
    rule_desc('host may be vulnerable', 'unlikely')).

interaction_rule(
    (admin(Host) :-
        attackerLocated(Domain),
        vulExists(Host, CVE, host_to_admin),
        cvss(CVE, AC)),
    rule_desc('cqc attack is possible against admin host or domain', 'likely')).

interaction_rule(
    (lowAccess(Host) :-
        attackerLocated(domain),
        vulExists(Host, CVE, vulnerableHost),
        cvss(CVE, AC)),
    rule_desc('low access is possible', 'likely')).

/* Got username but no password */
interaction_rule(
    (hash(User) :-
        userName(User),
        attackerLocated(Domain),
        vulExists(User, CVE, no_krb_preauth)),
    rule_desc('hash found asrep', 'likely')).

/* Valid Credentials */
interaction_rule(
    (validCredential(User) :-
        hash(User),
        vulExists(User, CVE, weak_hash)),
    rule_desc('cracking hash', 'probable')).

/* interaction_rule(
    (validCredential(User) :-
        hashKRB(User),
        vulExists(User, CVE, weak_hash)),
    rule_desc('cracking hash', 'probable')). */

/* Known vulnearbilities */
interaction_rule(
    (passTheTicket(Domain) :-
        validCredential(Domain),
        vulExists(Domain, CVE, cred_to_ticket),
        cvss(CVE, AC)),
    rule_desc('domain admin access is possible', 'likely')).

interaction_rule(
    (admin(Host) :-
        validCredential(Domain),
        hostDom(Host, Domain),
        vulExists(Host, CVE, cred_to_admin),
        cvss(CVE, AC)),
    rule_desc('admin access is possible', 'likely')).

interaction_rule(
    (coerceHTTP(Host) :-
        validCredential(Domain),
        vulExists(Host, CVE, cred_to_coerce_http),
        cvss(CVE, AC)),
    rule_desc('cred_to_coerce_http attack is possible', 'likely')).

interaction_rule(
    (admin(Host) :-
        coerceHTTP(Host),
        vulExists(Host, CVE, coerce_http_to_admin)),
    rule_desc('admin access is possible', 'likely')).

/* Priviege escalation */
interaction_rule(
    (admin(Host) :-
        lowAccess(Host),
        vulExists(Host, CVE, low_to_admin),
        cvss(CVE, AC)),
    rule_desc('privilege escalation', 'likely')).

/* Permissions move */
interaction_rule(
    (admin(Domain) :-
        dcSync(Domain),
        vulExists(Domain, V, dcSync_to_domadmin)),
    rule_desc('dc Sync', 'likely')).

/* Lateral move */
interaction_rule(
    (dcSync(DC) :-
        passTheTicket(DC),
        vulExists(DC, V, passTicket_to_dcsync)),
    rule_desc('lateral move to dcsync', 'likely')).

interaction_rule(
    (admin(Host) :-
        socksNTLM(Host),
        hashNTLM(admin),
        vulExists(Host, V, ntlmsock_to_hostadmin)),
    rule_desc('lateral move to host admin', 'likely')).

/* ADCS */
interaction_rule(
    (passTheTicket(Domain) :-
        coerceHTTP(Domain),
        vulExists(Domain, V, adcs)),
    rule_desc('ECS8 from http to pass the ticket', 'likely')).

/* Kerberos */
interaction_rule(
    (hashKRB(User) :-
        validCredential(User1),
        vulExists(User, V, kerberoasting)),
    rule_desc('kerberos attack', 'likely')).