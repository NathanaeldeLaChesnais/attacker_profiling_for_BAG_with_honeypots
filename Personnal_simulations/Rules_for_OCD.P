primitive(attackerLocated(_domain)).
primitive(vulExists(_domain, _cve, _mod)).
primitive(hostDom(_host, _domain)).

derived(mitm(_domain)).
derived(admin(_domain)).
derived(dcSync(_domain)).
derived(vulnerableHost(_domain)).
derived(classicQCM(_domain)).
derived(validCredentials(_domain)).
derived(lowAccess(_host)).

meta(attackGoal(_)).
meta(cvss(_vulID, _ac)).

:- table mitm/1.

interaction_rule(
    (mitm(Domain) :-
        attackerLocated(Domain),
        vulExists(Domain, CVE, smb),
        cvss(CVE, AC)),
    rule_desc('mitm attack is possible', cvss_ac(AC))).

interaction_rule(
    (localAdmin(Domain) :-
        mitm(Domain),
        vulExists(Domain, CVE, ms_08_068),
        cvss(CVE, AC)),
    rule_desc('local admin access is possible', cvss_ac(AC))).

interaction_rule(
    (dcSync(Domain) :-
        mitm(Domain),
        vulExists(Domain, CVE, dcSync),
        cvss(CVE, AC)),
    rule_desc('dc sync attack is possible', cvss_ac(AC))).

/* Classic Quick Compromission Methods */
interaction_rule(
    (vulnerableHost(_) :-
        attackerLocated(Domain)),
    rule_desc('host may be vulnerable', 'unlikely')).

interaction_rule(
    (admin(Host) :-
        vulnerableHost(Host),
        vulExists(Host, CVE, host_to_admin),
        cvss(CVE, AC)),
    rule_desc('classic quick compromission attack is possible against host or domain', cvss_ac(AC))).

interaction_rule(
    (lowAccess(Host) :-
        vulnerableHost(Host)),
    rule_desc('low access is possible', 'likely')).

/* Valid Credentials */
interaction_rule(
    (validCredentials(Domain) :-
        attackerLocated(Domain)),
    rule_desc('valid credentials may be found', 'likely')).

/* Known vulnearbilities */
interaction_rule(
    (admin(domain) :-
        validCredentials(Domain),
        vulExists(Domain, CVE, cred_to_domadmin),
        cvss(CVE, AC)),
    rule_desc('domain admin access is possible', cvss_ac(AC))).

interaction_rule(
    (admin(Host) :-
        validCredentials(Domain),
        hostDom(Host, Domain),
        vulExists(Host, CVE, cred_to_admin),
        cvss(CVE, AC)),
    rule_desc('admin access is possible', cvss_ac(AC))).

/* Priviege escalation */
interaction_rule(
    (admin(Host) :-
        lowAccess(Host),
        vulExists(Host, CVE, low_to_admin),
        cvss(CVE, AC)),
    rule_desc('privilege escalation', cvss_ac(AC))).

/* Permissions move */
interaction_rule(
    (admin(Domain) :-
        dcSync(Domain),
        validCredentials(Domain)),
    rule_desc('permissions move', 'likely')).

/* Lateral move */
interaction_rule(
    (dcsync(DC) :-
        passTheTicket(DC),
        validCredentials(Domain)),
    rule_desc('lateral move to dcsync', 'likely')).
