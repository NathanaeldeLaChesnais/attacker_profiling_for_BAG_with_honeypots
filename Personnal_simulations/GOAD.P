
attackerLocated(intranet).
attackGoal(stolenCredential(_, _)).
attackGoal(accessFile(_, _)).
/* attackGoal(hostDefined(_, _)).
attackGoal(stolenHash(jon_snow, windows)). */

/* Users and their properties */
userDefined(eddard_stark, dc02, domain_admin).
userPartOf(eddard_stark, runNTLMBot).

userDefined(jon_snow, dc02, user).
accessibleHash(jon_snow, windows). /* part 3 kerberoasting */
halfCompetent(jon_snow). /* part 3 */

userDefined(catelyn_stark, dc02, user).

userDefined(robb_stark, dc02, user).
userPartOf(robb_stark, runNTLMBot).
weakPassword(robb_stark).

userDefined(jeor_mormont, dc02, user).

userDefined(hodor, dc02, user).
inCompetent(hodor).

userDefined(localAdmin, castelblack, local_admin).

/* Hosts and their properties */
hostDefined(castelblack, dc02).
hostProperty(castelblack, signedSMB, false).
hostProperty(castelblack, automaticDNS, true). /* part4 */

hostDefined(dc02, dc02).
vulExists(dc02, 'CVE-2021-42287', Active_Directory). /* part5 samAccountName */
vulProperty('CVE-2021-42287', remoteExploit, fileAccess). /* part5 */
cvss('CVE-2021-42287', 'l'). /* part5 */
fileOnHost(ntdsdit, dc02). /* part5 */

/* exterior host */
hostDefined(external, out). /* part4, à voir parce qu'en vrai il prend l'identité d'un autre */
userAdminOf(attacker, external).

/* Network Configurations */
networkServiceInfo(castelblack, vpnService, rdp, 3389, _).
rdpEnabled(castelblack).
isRuning(ntlmBot, dc02). /* part4 */

/* Credentials */
credentialInClear(sql_svc, castelblack, mssql). /* part4 */
credentialInClear(robb_stark, castelblack, windows). /* part4 */


vulExists(mereen, 'CVE-2019-1040', removeTheMic).
vulProperty('CVE-2019-1040', remoteExploit, privilegeEscalation). /* part4 permet de récupérer des hash de mot de pass, à déployer et utiliser plus tard */


hacl(intranet, _, _, _).
